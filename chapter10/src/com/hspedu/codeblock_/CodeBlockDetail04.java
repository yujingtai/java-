package com.hspedu.codeblock_;

/**
 * 创建一个子类对象时（有继承关系），他们的静态代码块，静态属性初始化，普通代码块
 * 普通属性初始化，构造方法的调用顺序如下
 * 1、父类的 静态代码块 和 静态属性的初始化 优先级一样，看定义顺序
 * 2、子类的 静态代码块 和 静态属性的初始化 优先级一样，看定义顺序
 * 3、父类的 普通代码块 和 普通属性的初始化 优先级一样，看定义顺序
 * 4、父类的 构造器
 * 5、子类的 普通代码块 和 普通属性的初始化 优先级一样，看定义顺序
 * 6、子类的 构造器
 *
 * my perspective:
 *      首先是加载类，先有父类再有子类，所以先加载父类，此时就会调用父类的静态字段
 *      然后加载子类并调用子类的静态字段，然后进入子类的构造器，由之前的Detail可知
 *      先调用 super() ,在调用普通代码块
 *      那么通过子类的 super() 就会进入父类的 构造器 ，同样在父类的构造器中也存在
 *      这样的两种调用顺序，假如该父类继承超类Object，那么就该调用父类的普通代码块
 *      和普通属性的初始化，然后是父类的 构造器 ，在回到子类 继续同理
 */
public class CodeBlockDetail04 {
    public static void main(String[] args) {

    }
}

class A02 {

}
